(()=>{"use strict";const e=e=>{let t=[];return{name:e,addTask:function(e,n,c,i){let o=((e,t,n,c,i=!1)=>({title:e,description:t,dueDate:n,priority:c,complete:i}))(e,n,c,i);t.push(o)},delTask:function(e){t.splice(e,1)},toggleTaskCompletion:function(e){let n=t[e];n.complete=!1===n.complete},getTasks:()=>t}};(()=>{let t=(()=>{let t=[],n=e("Default");return t.push(n),{createProject:function(n){let c=e(n);t.push(c)},switchActiveProject:function(e){n=e},delProject:function(e){t[e]!==n&&t.splice(e,1)},getActiveProject:()=>n,getProjects:()=>t}})(),n=document.querySelector(".projects"),c=document.querySelector(".add-project-input"),i=document.querySelector(".add-project-btn"),o=document.querySelector(".add-task-btn"),d=document.querySelector(".overlay"),a=document.querySelectorAll(".close-modal"),l=document.querySelector("#task-name"),r=document.querySelector("#date"),s=document.querySelector("#priority"),u=document.querySelector("#description");function m(){!function(){for(let e=n.rows.length-1;e>=0;e--)n.deleteRow(e)}(),t.getProjects().forEach(((e,t)=>{let c=n.insertRow(t),i=document.createElement("button");i.onclick=p,i.innerText=e.name,i.dataset.indexNumber=t;let o=document.createElement("button");o.onclick=f,o.innerText="x",c.appendChild(i),c.appendChild(o)})),function(){let e=t.getActiveProject();t.getProjects().forEach(((t,n)=>{t.name===e.name&&document.querySelector(`[data-index-number="${n}"]`).classList.add("active")}))}()}function p(){t.switchActiveProject(t.getProjects()[this.dataset.indexNumber]),m(),k()}function v(){let e=c.value.trim();""===e||function(e){let n=t.getProjects(),c=!1;return n.forEach((t=>{e!==t.name||(c=!0)})),c}(e)||(t.createProject(e),m(),g([c]))}function f(){t.delProject(this.previousElementSibling.dataset.indexNumber),m()}function k(){let e=document.querySelector(".active-project-header"),n=t.getActiveProject();e.innerText=n.name,document.querySelector(".tasks").innerHTML="",function(){let e=t.getActiveProject(),n=document.querySelector(".tasks");e.getTasks().forEach(((e,t)=>{let c=document.createElement("div");c.classList.add("task");let i=document.createElement("div");i.classList.add("task-main");let o=document.createElement("button");o.onclick=E,o.classList.add("complete-task-btn"),e.complete&&o.classList.add("complete"),o.dataset.indexNumber=t;let d=document.createElement("h3");d.innerText=e.title,d.dataset.modal="edit",d.dataset.indexNumber=t,d.onclick=j;let a=document.createElement("button");a.classList.add("del-task-btn"),a.innerText="x",a.dataset.indexNumber=t,a.onclick=y;let l=document.createElement("div");l.classList.add("task-info");let r=document.createElement("div");r.classList.add("task-misc");let s=document.createElement("p");s.innerText=e.priority;let u=document.createElement("p");u.innerText=e.dueDate,r.appendChild(s),r.appendChild(u),l.appendChild(d),l.appendChild(r),i.appendChild(l),i.appendChild(a),c.appendChild(o),c.appendChild(i),n.appendChild(c)}))}()}function h(){let e=function(){let e=l.value,t=r.value,n=s.value,c=u.value;return g([l,r,s,u]),{title:`${e}`,description:`${c}`,dueDate:t,priority:`${n}`}}();t.getActiveProject().addTask(e.title,e.description,e.dueDate,e.priority),k(),L()}function y(){t.getActiveProject().delTask(this.dataset.indexNumber),k()}function E(){let e=this.dataset.indexNumber;this.classList.contains("complete")?this.classList.remove("complete"):this.classList.add("complete"),t.getActiveProject().toggleTaskCompletion(e)}function g(e){e.forEach((e=>{e.value=""}))}function x(){document.querySelector(".modal").classList.add("on"),d.classList.add("on")}function L(){document.querySelector(".modal").classList.remove("on"),d.classList.remove("on")}function j(){let e=document.querySelector(".modal-title"),n=this.dataset.indexNumber;e.innerText="Edit Task";let c=document.querySelector(".submit");c.innerText="Confirm Changes",c.dataset.indexNumber=n,c.removeEventListener("click",h),c.addEventListener("click",T),x(),function(e){let n=t.getActiveProject().getTasks()[e];l.value=n.title,r.value=n.dueDate,s.value=n.priority,u.value=n.description}(n)}function T(){let e=t.getActiveProject().getTasks()[+this.dataset.indexNumber];e.title=l.value,e.description=u.value,e.dueDate=r.value,e.priority=s.value,k(),L()}i.addEventListener("click",v),c.addEventListener("keyup",(function(e){13===e.keyCode&&(e.preventDefault(),v())})),o.addEventListener("click",(function(){document.querySelector(".modal-title").innerText="Add Task";let e=document.querySelector(".submit");e.innerText="Add",e.removeEventListener("click",T),e.addEventListener("click",h),g([l,r,s,u]),x()})),d.addEventListener("click",L),a.forEach((e=>{e.addEventListener("click",L)})),m(),k()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,