(()=>{"use strict";const e=e=>{let t=[];return{name:e,tasks:t,addTask:function(e,c,n,o,i=!1){let a=((e,t,c,n,o=!1)=>({title:e,description:t,dueDate:c,priority:n,complete:o}))(e,c,n,o,i);t.push(a)},delTask:function(e){t.splice(e,1)},toggleTaskCompletion:function(e){let c=t[e];c.complete=!1===c.complete},getTasks:()=>t}};(()=>{let t=(()=>{let t,c=[];function n(){localStorage.setItem("savedProjects",JSON.stringify({projects:c}))}function o(){JSON.parse(localStorage.getItem("savedProjects")).projects.forEach((n=>{let o=e(n.name);n.tasks.forEach((e=>{o.addTask(e.title,e.description,e.dueDate,e.priority,e.complete)})),c.push(o),t=c[0]}))}return null===localStorage.getItem("savedProjects")?(t=e("Default"),c.push(t)):o(),{createProject:function(t){let o=e(t);c.push(o),n()},switchActiveProject:function(e){t=e},delProject:function(e){c[e]!==t&&(c.splice(e,1),n())},getActiveProject:()=>t,getProjects:()=>c,saveProjects:n,loadProjects:o}})(),c=document.querySelector(".projects"),n=document.querySelector(".add-project-input"),o=document.querySelector(".add-project-btn"),i=document.querySelector(".add-task-btn"),a=document.querySelector(".overlay"),r=document.querySelectorAll(".close-modal"),l=document.querySelector("#task-name"),d=document.querySelector("#date"),s=document.querySelector("#priority"),u=document.querySelector("#description");function m(){!function(){for(let e=c.rows.length-1;e>=0;e--)c.deleteRow(e)}(),t.getProjects().forEach(((e,t)=>{let n=c.insertRow(t),o=document.createElement("button");o.onclick=p,o.innerText=e.name,o.dataset.indexNumber=t;let i=document.createElement("button");i.onclick=f,i.innerText="x",n.appendChild(o),n.appendChild(i)})),function(){let e=t.getActiveProject();t.getProjects().forEach(((t,c)=>{t.name===e.name&&document.querySelector(`[data-index-number="${c}"]`).classList.add("active")}))}()}function p(){t.switchActiveProject(t.getProjects()[this.dataset.indexNumber]),m(),k()}function v(){let e=n.value.trim();""===e||function(e){let c=t.getProjects(),n=!1;return c.forEach((t=>{e!==t.name||(n=!0)})),n}(e)||(t.createProject(e),m(),g([n]))}function f(){t.delProject(this.previousElementSibling.dataset.indexNumber),m()}function k(){let e=document.querySelector(".active-project-header"),c=t.getActiveProject();e.innerText=c.name,document.querySelector(".tasks").innerHTML="",function(){let e=t.getActiveProject(),c=document.querySelector(".tasks");e.getTasks().forEach(((e,t)=>{let n=document.createElement("div");n.classList.add("task");let o=document.createElement("div");o.classList.add("task-main");let i=document.createElement("button");i.onclick=y,i.classList.add("complete-task-btn"),e.complete&&i.classList.add("complete"),i.dataset.indexNumber=t;let a=document.createElement("h3");a.innerText=e.title,a.dataset.modal="edit",a.dataset.indexNumber=t,a.onclick=S;let r=document.createElement("button");r.classList.add("del-task-btn"),r.innerText="x",r.dataset.indexNumber=t,r.onclick=j;let l=document.createElement("div");l.classList.add("task-info");let d=document.createElement("div");d.classList.add("task-misc");let s=document.createElement("p");s.innerText=e.priority;let u=document.createElement("p");u.innerText=e.dueDate,d.appendChild(s),d.appendChild(u),l.appendChild(a),l.appendChild(d),o.appendChild(l),o.appendChild(r),n.appendChild(i),n.appendChild(o),c.appendChild(n)}))}()}function h(){let e=function(){let e=l.value,t=d.value,c=s.value,n=u.value;return g([l,d,s,u]),{title:`${e}`,description:`${n}`,dueDate:t,priority:`${c}`}}();t.getActiveProject().addTask(e.title,e.description,e.dueDate,e.priority),t.saveProjects(),k(),P()}function j(){t.getActiveProject().delTask(this.dataset.indexNumber),t.saveProjects(),k()}function y(){let e=this.dataset.indexNumber;this.classList.contains("complete")?this.classList.remove("complete"):this.classList.add("complete"),t.getActiveProject().toggleTaskCompletion(e),t.saveProjects()}function g(e){e.forEach((e=>{e.value=""}))}function E(){document.querySelector(".modal").classList.add("on"),a.classList.add("on")}function P(){document.querySelector(".modal").classList.remove("on"),a.classList.remove("on")}function S(){let e=document.querySelector(".modal-title"),c=this.dataset.indexNumber;e.innerText="Edit Task";let n=document.querySelector(".submit");n.innerText="Confirm Changes",n.dataset.indexNumber=c,n.removeEventListener("click",h),n.addEventListener("click",x),E(),function(e){let c=t.getActiveProject().getTasks()[e];l.value=c.title,d.value=c.dueDate,s.value=c.priority,u.value=c.description}(c)}function x(){let e=t.getActiveProject().getTasks()[+this.dataset.indexNumber];e.title=l.value,e.description=u.value,e.dueDate=d.value,e.priority=s.value,t.saveProjects(),k(),P()}o.addEventListener("click",v),n.addEventListener("keyup",(function(e){13===e.keyCode&&(e.preventDefault(),v())})),i.addEventListener("click",(function(){document.querySelector(".modal-title").innerText="Add Task";let e=document.querySelector(".submit");e.innerText="Add",e.removeEventListener("click",x),e.addEventListener("click",h),g([l,d,s,u]),E()})),a.addEventListener("click",P),r.forEach((e=>{e.addEventListener("click",P)})),m(),k()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,